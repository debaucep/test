import UIKit
//1) Создайте класс Охранник. Задайте ему свойство: посетитель. Создайте несколько экземпляров, которые не имеют ссылок на класс Охранник.
//2) Вызовите у Охранника конструктор (init) и получите сообщение в консоль о том, что посетитель по имени «Иван» пришёл.
//3) Сделайте так, чтобы посетитель ушёл, вызвав деконструктор(deinit).
class Security{
    var somebody: [Visitor]?
    deinit{
        print("Охранник заснул")
    }
}
class Visitor{
    var name: String
    init(name: String){
        self.name = name
        print("Посетитель \(name) пришёл")
    }
    deinit {
        print("Посетитель \(name) ушёл")
    }
}
if true{
    let firstVisitor = Visitor(name: "Владимир")
    let secondVisitor = Visitor(name: "Мария")
    let thirdVisitor = Visitor(name: "Артур")
    let security = Security()
    security.somebody?.append(firstVisitor)
    security.somebody?.append(secondVisitor)
    security.somebody?.append(thirdVisitor)
}
//4) Есть Компания, у неё есть директор, зам.директора и менеджеры по продажам.
//Пояснение: Директор — родительский класс, зам.директора его наследник, менеджеры — наследники зам.директора.
//5) Менеджеры по продажам должны посылать друг другу сообщения. Вроде: «как продажи?» или «Передай мне отчет».
//6) Реализуйте возможность у Менеджеров спрашивать Зам. директора про зарплату.
//7) Реализуйте Зам. директору возможность отправлять отчет Директору. ПРОДВИНУТЫЙ УРОВЕНЬ.
//1) Компания может выводить в консоль список всех сотрудников.
//2) Директор может обращаться к Компании и получить список всех сотрудников.
//3) Реализуйте возможность уволить сотрудника (см.deinit).
