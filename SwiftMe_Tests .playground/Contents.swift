import UIKit

var greeting = "Hello, playground"


//3

//var a: Int8 = 10
//var b: UInt8 = 12
//
//
//UInt8.max
//Int8.min
//
//a = Int8.min
//b = UInt8.max


/*
Задание 4

Объявите две целочисленные однотипные переменные, при этом тип данных первой должен быть задан неявно, а второй — явно. Обеим переменным должны быть присвоены значения.
Поменяйте значения переменных местами.
Выведите получившиеся значения на консоль. При этом в каждом варианте выводимых данных текстом напишите, какую переменную вы выводите.

*/

//var a = 10
//var b: Int = 20
//
//var c = 0
//
//c = a // c = 10
//
//a = b // a = 20
//
//b = c // b = 10
//
//
//print ("This A which is \(a)")
//print ("THis B which is \(b)")


/*
Задание 5

 Объявите два параметра. Первый из них должен быть константой типа Float с произвольным числовым значением, второй — переменной типа Double с произвольным значением.
 Установите новое произвольное значение всем параметрам, для которых эта операция возможна.

*/


let parametrOne: Float = 9.99
var parametrTwo: Double = 10.99

parametrTwo = 11.99 // Константы не меняются, поэтому установить значение можно только для var


/*

 Задание 6
 
 1) Объявите три константы: одну типа Int со значением 18, вторую типа Float со значением 16.4 и одну типа Double со значением 5.7.
 2) Найдите сумму всех трех констант и запишите ее в переменную типа Float.
 3) Найдите произведение всех трех констант и запишите его в переменную типа Int. Помните, что вам необходимо получить результат с минимальной погрешностью (т.е. с максимальной точностью).
 4) Найдите остаток от деления константы типа Float на константу типа Double и запишите ее в переменную типа Double.
 5) Выведите на консоль результаты всех трех операций
 
 
*/

//let a: Int = 18
//let b: Float = 16.4
//let c: Double = 5.7
//
//var sum: Float = Float (a) + Float (b) + Float (c)
//var multi: Double = Double (a) * Double (b) * Double (c)
//
//var multiFinale = Int(multi)
//
//// Очень упорото ищется остаток отделения дробных величин.
//// Для выполнения этой задачи нужно применить МЕТОД truncatingRemainder(dividingBy: ХХХХХ) к первой константе.
//
//
//var reminder = Double (b).truncatingRemainder(dividingBy: c)
//reminder
//
//print (sum)
//print (multiFinale)
//print (reminder)


/*

 Задание 7

 
 1) Объявите переменные a и b целочисленного типа данных и проинициализируйте им значения 2 и 3.
 2) Вычислите значение уравнения (a+4b)(a–3b)+a2 и выведите результат на консоль.
 

*/

//
//var a = 2
//var b = 3
//
//var c = (a + 4 * b) * (a - 3 * b) + (a * a)
//
//print (c)
//


/*

 Задание 8

 1) Объявите переменные c и d и присвойте им значения 1.75 и 3.25.
 2) Вычислите значение уравнения 2(c+1)2+3(d+1) и выведите результат на консоль.
 3) Какой тип данных будет у результата математического выражения?


*/

//
//var c = 1.75
//var d = 3.25
//
//
////Интересная особенность - мы може добаить к Double число 1, но не можем добавить переменную: Int = 1. Такие дела!
//
//var result = 2 * (c + 1) * 2 + 3 * (d + 1)

/*

 Задание 9

 1) Объявите константу length и запишите в нее произвольное целочисленное значение.
 2) Вычислите площадь квадрата с длиной стороны, равной length.
 3) Вычислите длину окружности радиусом length.
 4) Получите произведение полученных значений

*/

//var lenght = 11
//
//
//// Еще один адок - возведение в КВАДРАТ. Это не питоновские ** Строгая типизация, че )
//
//
//var sq = pow(Double(lenght),2)
//var p =  Double (2) * 3.14 * Double (lenght) // 2PiR
//
//var multi = sq * p



/*
 
 Задание 10

 1) Объявите переменную типа String и запишите в нее произвольный строковый литерал.
 2) Объявите константу типа Character, содержащую произвольный символ латинского алфавита.
 3) Объявите две переменные типа Int и запишите в них произвольные значения.
 4) Одним выражением объедините в строковый литерал переменную типа String, константу типа Character и сумму переменных типа Int, а результат запишите в новую константу.
 5) Выведите данную константу на консоль.

*/

//var a: String = "test"
//let b: Character = "b"
//
//var c: Int = 10
//var d: Int = 11
//
//var sum = c + d
//
//let finale = a + String (b) + String (sum)
//
//print (finale)


/*
 
 Задание 11

 Выведите на консоль букву W, составленную из символов «звездочка» (*), расположенных в три строки.
 
 *   *   *
  * * * *
   *   *

*/

  
//print("*   *   *")
//print(" * * * *")
//print("  *   *")

/*
   
   Задание 12

   1) Объявите три переменные: в первую запишите номер дня в месяце, во вторую запишите название месяца, в третью запишите год. Тип данных переменных выберите самостоятельно
   2) Выведите на консоль дату в формате «2021 январь 01», используя данные, записанные в объявленные ранее переменные.
   
*/

//var nrOfDay = 1
//var nameOfMonth = "January"
//var year = 2022
//
//print (String(year) + " " + nameOfMonth +  " " + String (nrOfDay))
//

/*
   
   Задание 13

 1) Объявите две логические переменные. Значение первой должно быть равно true, второй — false.
 2) Получите результат операции логического И и логического ИЛИ, где в качестве операндов используются данные переменные
   
*/

//var isRain = true
//var isSunny = false
//
//
//var test1 = isRain && isSunny
//var test2 = isRain || isSunny


/*
   
   Задание 14

 Без использования Xcode (в уме или с помощью ручки и бумаги) вычислите результат следующих логических выражений:

 ( ( true && false ) || true )
 true && false && true || ( true || false )
 false || ( false || true ) && ( true && false )
 
 
 

*/

//( ( true && false ) || true )
//true && false && true || ( true || false )
//false || ( false || true ) && ( true && false )


/*
   
   Задание 15

 1) Объявите строковую константу и запишите в нее ваше имя.
 2) Объявите переменную типа Float и запишите в нее ваш вес в килограммах.
 3) Объявите переменную типа Int и запишите в нее ваш рост в сантиметрах.
 4) Вычислите ваш индекс массы тела и запишите его в переменную. Формула для расчета ИМТ: ИМТ = вес[кг] / рост [в метрах в квадрате]
 5) Выведите на консоль текст, содержащий ваши имя и индекс массы тела. При этом используйте значения из объявленных переменных
 

*/

//var name = "Dmitry"
//var weight: Float = 90
//var height: Int = 175
//
//var heightMeters = Double (height) / 100
//
//
//
//var index = weight / Float (heightMeters * heightMeters)
//
//print (name, String(index))

/*
   
   Задание 16

 let a: Int = 46
 let b: Int = 10
 // 1
 let answer1: Int = (a * 100) + b
 // 2
 let answer2: Int = (a * 100) + (b * 100)
 // 3
 let answer3: Int = (a * 100) + (b / 10)
 // 4
 let answer4: Int = (b / 100) * 12 + Int((Double(a) / 0.01))

*/


/*
   
   Задание 17

 В выражении ниже расставьте скобки, так, чтобы они соответствовали порядку вычисления и не изменяли итоговый результат.

 5 * 3 - 4 / 2 * 2

*/

//5 * 3 - 4 / 2 * 2
//
//(5 * 3) - ((4 / 2) * 2)


/*
   
   Задание 18

 Объявите две константы a и b типа Double и проинициализируйте им произвольные значения.
 Рассчитайте среднее значение a и b и сохранить результат в константе типа Float с именем average.

*/

//var a: Double = 12.2
//var b: Double = 5.4
//
//var avg: Float = Float ((a + b) / 2)
//





// TUPLES - Кортежи




// с элементом Кортежа (в нашем случае Элемент.0) мы работаем как с переменной. можем добавить сторку, работает присваивание


//var tuple: (String, String) = ("", "Friend")
//tuple.0 = tuple.1+"ship!"
//print(tuple)
//
//
//
//let tupleAlpha = (1, "alpha")
//let tupleBeta = ("2", "beta")
////print(tupleAlpha < tupleBeta)
//
//
//
//
//var tupleAboutMe = ("Mike", 37)
//
//
//var (name, age) = tupleAboutMe
//tupleAboutMe
//
//var tupleAboutMe2 = (name: "Mike", age: 37)
//
//tupleAboutMe == tupleAboutMe2
//
//
//
//tupleAboutMe.0 = "Eridar" // Не перезаписывает имя в начальный тюпл
//
//
//print (tupleAboutMe)
//print(name)

/*
   
   Задание 1
 
 1. Объявите константу и запишите в нее свое имя.
 2. Объявите переменную типа UInt8 и запишите в нее свой возраст.
 3. Объявите кортеж и явно определите его тип данных, как (name: String, age: Int).
 4. В первый элемент кортежа запишите значение константы с именем.
 5. Во второй элемент кортежа запишите значение из переменной с вашим возрастом.

*/

//var name = "Dmitry"
//var age: UInt8 = 34
//
////Объявите кортеж и явно определите его тип данных, как (name: String, age: Int).
//var tuple: (nameOfUser: String, ageOfUser: Int)
//
//tuple.nameOfUser = name
//tuple.ageOfUser = Int (age)
//
//print (tuple)

/*
   
   Задание 2
 
 Объявите кортеж, способный хранить три значения типа Int16.
 Одним выражением объявите две константы типа Int и проинициализуйте им произвольные значения.
 В первые два значения кортежа запишите значения из данных переменных, а в третий их сумму.

*/

//var tuple: (Int16, Int16, Int16)
//var (a, b) = (10, 11)
//tuple = (Int16 (a), Int16 (b), Int16 (a) + Int16 (b))
//
//print (tuple)
//

/*
   
   Задание 3
 
 var someTuple = (myName: "Alex", myAge: 12, "Russia")

*/

/*
   
 Задание 4

 Будет ли корректно выполнен следующий код? Как исправить код, если он работает некорректно?

 var tupleOne = (first: 1, second: 2)
 var tupleTwo = (3, 4)
 tupleTwo = tupleOne
 tupleTwo.first

*/


/*
   
 Задание 5

 Вам даны две целочисленные переменные со значениями 12 и 21. Поменяйте их значения местами без использования буферной переменной и математических операций.

*/


//var a: Int = 12
//var b: Int = 21
//
//var tuple: (Int, Int)
//tuple = (b, a)
//
//
//(a, b) = (b, a)
//
//print (a)
//print (b)

/*

Задание 6

1) Создайте кортеж с двумя параметрами: ваш любимый фильм и ваше любимое число. Все элементы кортежа должны быть именованными.
2) Одним выражением запишите каждый элемент кортежа в две константы. Проверьте значения параметров с помощью вывода в области результатов.
3) Создайте псевдоним типа, используемого для первого кортежа, назовите его Man. Создайте второй кортеж типа Man, но описывающий другого человека (с другими значениями). Обратите внимание, что элементы кортежа так же должны иметь имена.
4) Обменяйте значения в кортежах между собой.
5) Создайте новый кортеж, элементами которого будут любимое число из первого кортежа, любимое число из второго кортежа и разница любимых чисел первого и второго кортежей.
 */



var tuple1 = (fFilm: "Snatch", fNr : 91)


tuple1.1

//var tuple2 = type(of: tuple)
//
//print (tuple2)




let (a, b) = (tuple1.fFilm, tuple1.fFilm)
let (c, d) = (tuple1.fNr, tuple1.fNr)

print (a)
print (b)
print (c)
print (d)


//Создайте псевдоним типа, используемого для первого кортежа, назовите его Man. Создайте второй кортеж типа Man, но описывающий другого человека (с другими значениями). Обратите внимание, что элементы кортежа так же должны иметь имена.

typealias Man = (fFilm: String, fNr: Int)
var tuple2: Man = ("Saw", 666)

var tuple3: Man

tuple3 = tuple1
tuple1 = tuple2
tuple2 = tuple3

tuple1
tuple2


//5) Создайте новый кортеж, элементами которого будут любимое число из первого кортежа, любимое число из второго кортежа и разница любимых чисел первого и второго кортежей.

var tuple4 = (tuple1.1, tuple2.1, tuple1.1 - tuple2.1)


print (tuple4)





//



let possibleNumber = "1701"
let convertedNumber = Int(possibleNumber)


let digits = ["One", "Two", "Three", "Four"]
if let last = digits.last {
    print(last)
}





// Опционалы


/*
   
 Задание 1

 Какое значение у каждой из приведенных переменных?

 var easy: String?
 var medium: String!
 var hard: String

*/


//var easy: String?
//var medium: String!
//var hard: String = ""
//
//hard


/*

 Задание 2
 
 В чем отличие переменных easy и medium из предыдущего задания?

*/


/*

 Задание 3
 
 Будет ли корректно выполнен следующий программный код? Если в нем присутствуют ошибки, то по-возможности исправьте их.

 easy = "1"
 medium = "contra"
 hard = "play game"
 easy = medium
 hard = medium
 easy = hard!
 easy = hard
 var gameTuple = (easy, Optional(hard))
 var gameText: String = gameTuple.0

*/


//var easy = "1"
//var medium = "contra"
//var hard = "play game"
//easy = medium
//hard = medium
//easy = hard
//easy = hard
//var gameTuple = (easy, Optional(hard))
//
//var gameText: String = gameTuple.0


/*

 Задание 4

 Покажите не менее трех способов (с помощью разных синтаксических конструкций) создания переменной типа String?

*/


var one: String? = "1"
var two = Optional("2")
var three = String (3.14) //А это что за фигня такая???


/*

 Задание 5
 
 1) Создайте псевдоним типа String с именем Text
 2) Объявите три константы типа Text. Значения дух констант должны состоять только из цифр, а третьей — из букв и цифр
 3) С помощью оператора условия определите те константы, которые состоят только из цифр и выведите из на консоль

*/

typealias Text = String


var text1: Text = "11"
var text2: Text = "22"
var text3: Text = "33zz"

if let result1 = Int(text1){
    print (result1)
}

if let result2 = Int(text2){
    print (result2)
}

if let result3 = Int(text3){
    print(result3)
}

/*

 Задание 6
 
 В задании используются результаты предыдущего задания
 1) Создайте псевдоним типа (numberOne: Text?, numberTwo: Text?) с именем TupleType.
 2) Создайте три переменные типа TupleType, содержащие следующие значения: ("190", "67"), ("100", nil), ("-65", "70").
 3) С помощью конструкции switch-case определите, какие из кортежей не содержат nil в своем составе и выведите значения их элементов на консоль

*/




typealias TupleType = (numberOne: Text?, numberTwo: Text?)


var var1: TupleType = ("190", "67")
var var2: TupleType = ("100", nil)
var var3: TupleType = ("-65", "70")


/*

 Задание 7
 
 Представьте, что вы являетесь преподавателем курсов по шахматам. Ваши занятия посещают ученики и в конце каждого занятия получаю оценку.
 1) Создайте словарь, который будет содержать информацию о ваших студентах и об их успехах.

 Тип данных словаря — [String: [String: UInt]]
 Индекс — это фамилия ученика.
 Значение — еще один словарь, содержащий информацию о дате занятия и полученной оценке.
 В вашем электронном журнале должна находиться информация о трех учениках, по две оценки для каждого. Фамилии и даты придумайте самостоятельно.
 2) Подсчитайте средний балл каждого студента, средний балл группы, и выведите информацию на консоль.

 Задание 8

 Основано на предыдущем задании
 Перед вам стоит задача внести в уже существующий словарь оценку за еще одно занятие для студента. Покажите, каким образом это можно сделать.

 Задание 9

 1) Создайте псевдоним Coordinates для типа кортежа (alpha: Character?, num: Int?). Данный тип будет описывать координаты шахматной фигуры на игровом поле. Если вместо элементов кортежа стоит nil, значит фигура не находится на игровом поле.
 2) Создайте псевдоним Chessman для типа словаря [String:Coordinates]. Данный тип описывает шахматную фигуру на игровом поле. В ключе словаря должно хранится имя фигуры, например "White King", а в значении — кортеж, указывающий на координаты фигуры на игровом поле.
 3) Создайте переменный словарь figures типа Chessman и добавьте в него три произвольные фигуры, одна из которых не должна иметь координат.
 4) Создайте цикл, которая обходит всех элементы словаря (все фигуры), и проверяет, убита ли очередная фигура (элемент словаря figures), далее выводит на консоль информацию либо о координатах фигуры, либо о ее отсутствии на игровом поле.
 

*/


/*

let numbers: [Float] = [10, 11.11, 12, 13, 14]

let numbers1 = [1, 2, 3, 4, 5]

numbers1 [4]
numbers1.last

[1, 2, 3].count


let array = Array(arrayLiteral: 1,1,2,2,3,3,4,4)

let array2 = [1, 1, 2, 2, 3, 3, 4, 4]


array == array2


var words = [String]()

var words1 : [String] = []

words == words1


let ships = ["Star Trek", "Enterprise"]
let enterprise = ships [0]


let someString = [String](repeating: "Malkovitch", count: 2)


let arrayZ = Array(1..<10).count


let arrayLet = [1, 2, 3]



[].count == 0
[].isEmpty

let ships1 = ["Sulaco", "Nostromo"]
let ships2 = ["X-Wing", "TIE Fighter"]
let ships3 = ships1 + ships2


let i = "5"
var j = i + i

 */


// Массивы


/*

 Задание 1

 Какие из выражений не вызовут ошибок? Исправьте найденные ошибки.

 var arr1 = [1,2,3,"4",5,6]
 var arr2 = ["a","Z"]
 var arr3 = [Character("a"), "b"]
 var arr4 = [Character("a"), "zz"]
 var arr5: [ClosedRange<Float>] = [1...3, 2.1...2.3]

 
 */

//var arr1 = [1,2,3,4,5,6]
//var arr2 = ["a","Z"]
//var arr3 = [Character("a"), "b"]
//var arr4 = [Character("a"), "z"]
//var arr5: [ClosedRange<Float>] = [1...3, 2.1...2.3]
//
//print (arr5)



/*

 Задание 2

 Покажите все способы создания массива, состоящего из целочисленных элементов от 0 до 10
 
 */

//var arr1 = Array(1...10)
//
//var arr2 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
//
//arr1 == arr2


/*

 Задание 3

 Покажите все известные вам способы создания массива, состоящего из пяти одинаковых значений
 
 */

//var arr1 = [String](repeating: "ZAVR", count: 5)
//
//var arr2 = ["ZAVR", "ZAVR", "ZAVR", "ZAVR", "ZAVR"]


/*

 Задание 4

 1)Создайте массив, состоящий из четырех целочисленных элементов

 2)Сделайте так, чтобы вместо второго и третьего элементов массива (с индексами 1 и 2) был элемент, содержащий сумму начального и конечного элементов данного массива. После этого в массиве должно остаться 3 элемента.

 3) Отсортируйте элементы по возрастанию
 
 */


//var arr = [1, 2, 3, 4]
//
//let x = arr.first
//let y = arr.last
//arr.insert(x! + y!, at: 2)
//arr.remove(at: 1)
//arr.remove(at: 2)
//arr.sort()
//
//
//
//var arr1 = [1, 2, 3, 4]
//arr1.remove(at: 2)
//arr1.remove(at: 1)
//arr1.insert(0, at: 1)
//arr1 [1] = arr1.first! + arr1.last!
//arr1.sort()


/*

 Задание 5

 1) Создайте массив, состоящий из всех целых чисел от 1 до 100

 2) Создайте пустой массив типа Array<Int>

 3) Проинициализируйте пустому массиву элементы с 25го по 50ый
 
 */

//var arr = Array(1...100)
//var arr2: [Int] = []
//
//
//arr [24...49] // вот там можем ссылваться на целую часть Массива
//
//arr2 = Array(arr[24...49])


/*
Задание 6

1) Создайте массив arr из пяти элементов типа Character

2) В массив arr вставьте вторым элементом (не вместо второго, а между первым и вторым) символ «z»

3) Создайте переменную i типа UInt8 и проинициализируйте ей количество элементов массива arr.
 
 */

//var arr: [Character] = ["a", "b", "c", "d", "e"]
//
//
//arr.insert("z", at: 1)
//
//var i: UInt8 = UInt8 (arr.count)
//
//
//
////var a: Int = 12



/*
Задание 7

 Каким образом можно получить значение предпоследнего элемента массива независимо от количества элементов в нем.
 Может ли описанный вами синтаксис привести к ошибке? Если да, то в каком случае?
 
 */

//
//var arr = ["a", "b"]
//
//var beforeLast = arr.count - 2
//
//if arr.count > 1 {
//    arr [beforeLast]
//} else {
//    print ("Please check nr of values in the Array")
//}


/*
 
 Задание 8

 Определи тип каждого из массивов
 
 var arr = [1,2,3,4,100]
 var arr = [Character("2"), "c","5"]
 var arr = [[1...10],[2...8],[3...7]]
 var arr = [1...2, 3...4, 5..<6]
 var arr = [1, arr.0 + 1, arr.1 + 1]
 
 */


//var arr1 = [1,2,3,4,100] // Int
//var arr2 = [Character("2"), "c","5"] // Character
//var arr3 = [[1...10],[2...8],[3...7]] // Closed Range
////var arr4 = [1...2, 3...4, 5..<6] // Error
////var arr5 = [1, arr.0 + 1, arr.1 + 1] // Error


/*
 
 Задание 9

 Будет ли корректно выполнен следующий код? Как исправить код, если он работает некорректно?

 Что будет выведено на консоль?

 var arr = [Array<Character>]()
 arr.append(["a", "b", "c"])
 arr.append(["d", "e", "f"])
 arr.remove(at:1)
 var arr2 = arr.remove(at: 0)
 print(arr2[0])
 */


//var arr = [Array<Character>]()
//arr.append(["a", "b", "c"])
//arr.append(["d", "e", "f"])
//
//
//arr
//arr.remove(at:1)
//arr
//
//
//var arr2 = arr.remove(at: 0)
//
//print (arr2)
//print(arr2[0])



/*
 
 Задание 10

 Будет ли корректно выполнен следующий код? Как исправить код, если он работает некорректно?

 var firstArray = [1,2,3,4,5]
 var secondArray: [UInt] = firstArray.dropLast()
 
 
 */


// Диапазоны

/*
 
 Задание 1

 Покажите два способа создания диапазона, который содержит все целые числа от 1 до 9
 
 
 */

//var range1 = 1...9
//var range2 = 1..<10

/*
 
Задание 2

Будет ли корректно выполнен следующий код? Как исправить код, если он работает некорректно?

var range = "a"..."z"
rangeTwo = "1"..."y"
range = rangeTwo
 
 */

//var range = "a"..."z"
//var rangeTwo = "1"..."y"
//range = rangeTwo

/*
 Задание 3
 

 Определите тип данных, которые будут иметь объявленные параметры

 var range = 1..<10
 var range2 = 1..
 var range3 = ..<5
 var range4 = -100...100
 
 */

//var range = 1..<10
////var range2 = 1.. // Error
//var range3 = ..<5
//var range4 = -100...100


/*
 Задание 4
 

 Каким будет значение первого элемента диапазона, хранящегося в переменной range?

 var range = ..<UInt8(10)
 
 */

// не будет иметь первого элемента


/*
 Задание 5

 Какие значения примут параметры comparable и comparable2?

 var a = 1...2
 var b = 2...3
 let comparable = a == b // true
 let comparable2 = a < b // Error - we cant compare Ranges...
 
 */


/*
 
 Задание 6

 Создайте диапазон целых чисел от -100 до 100 и инициализируйте его константе range
 Создайте переменную item типа UInt со значением 21.
 Создайте переменную типа Bool и запишите в нее результат проверки наличия значения переменной item в диапазоне range. Каким образом произвести данную проверку?
 
 */

//var range = -100...100
//var item: UInt = 21
//
//
//var check: Bool = true // check var
//
//if range.contains(Int(item)) {
//    check = true
//} else {
//    check = false
//}
//
//check


/*
 
 Задание 7

 Создайте диапазон, содержащий все заглавные латинские символы.
 Какими будут значения методов min() и max() для этого диапазона? // Это нельзя сделать так как это не Int
 Какими будут значения свойств lowerBound и upperBound для этого диапазона?

 */
//
//
//var charRange = "A"..."Z"
//
//charRange.lowerBound
//charRange.upperBound


/*

 Задание 8

 Покажите два способа создания диапазона значений типа Float. В обоих способах должен использоваться оператор ...

 */

//var float1: ClosedRange <Float> = 1.0...10.0
//var float2 = Float (1)...2


//Множества


/*

 Задание 1

 Какие из выражений не вызовут ошибок и вернут множество (т.е. функция type(of:) должна вернуть Set)

 var set1 = [1, 2, 3, 4, 5]
 var set2: Set = [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0]
 var set3: Set = ["a","c"]
 var set4 = Set(arrayLiteral: -0, +0, 1, 2, 3)
 var set5 = Set(arrayLiteral: 0, 1, 2, 3, 4)
 
 
 */

//var set1 = [1, 2, 3, 4, 5] // array
//var set2: Set = [1, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0] // Ok
//var set3: Set = ["a","c"] // Ok
//var set4 = Set(arrayLiteral: -0, +0, 1, 2, 3) // Ok
//var set5 = Set(arrayLiteral: 0, 1, 2, 3, 4) // OK


/*

 Задание 2

 Что будет выведено на консоль в результате выполнения кода?

 var mySet:Set = []
 mySet.insert(13.4)
 print( type (of: mySet.count ) )

 
 
 */

//
//var mySet:Set <Double> = []
//mySet.insert(13.4)
//print( type (of: mySet.count ) )




/*

 Задание 3

 Что будет выведено на консоль в результате выполнения кода?

 var mySet2: Set = [13.4, 15.1]
 print( mySet2.contains( Double(13.4) ) )
 
 
 */


//var mySet2: Set = [13.4, 15.1]
//print( mySet2.contains( Double(13.4) ) )


/*

 Задание 4

 Какой тип будут иметь созданные множества и их элементы (что вернет функция type(of:) для созданных множеств)?

 var setA: Set = [1, 2, 3, 4, 5]
 var setB = Set( arrayLiteral: 1, 2, 3, 4, 5 )
 
 */


//var setA: Set = ["1", "2", "3"]
//var setB = Set( arrayLiteral: 1, 2, 3, 4, 5 )
//
//type(of: setA)
//type(of: setB)


/*

 Задание 5

 Какие элементы будут содержаться в множестве resultSet в конце листинга?

 var setOne: Set = [0, 1, 2, 3]
 var setTwo: Set = [0, 2, 4, 6]
 var resultSet = setOne.union(setTwo)
 resultSet.remove(4)

 
 */
//
//var setOne: Set = [0, 1, 2, 3]
//var setTwo: Set = [0, 2, 4, 6]
//var resultSet = setOne.union(setTwo)
//resultSet.remove(4)
//resultSet
//


/*

 Задание 6

 1) Объявите множество taskSet1, состоящий из всех целочисленных элементов от 1 до 10
 2) Объявите множество taskSet2, состоящий из всех целочисленных элементов от 5 до 15
 3) Создайте множество taskSet3, состоящий из элементов, которые входят и в taskSet1, и в taskSet2
 4) Создайте множество taskSet4, состоящий из элементов, которые не пересекаются в taskSet1 и taskSet2
 5) Запишите в переменную count типа UInt8 количество элементов в массиве taskSet4. Какое значение примет эта переменная?

 
 */


//var taskSet1: Set = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
//
//var taskSet2: Set = [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
//
//var taskSet3 = taskSet1.union(taskSet2)
//
//var taskSet4 = taskSet1.symmetricDifference(taskSet2)
//
//var count = UInt8 (taskSet4.count)



// СЛОВАРИ


/*

 Задание 1
 
 В результате каких из выражений будет создан словарь? Какой тип данных будет у созданных параметров?

 var dict1: Dictionary = ["One":(100,101),"Two":(200,201)] // OK
 var dict2: Dictionary = [(1,2,3):1, (2,3,4):2] / no
 var dict3: Dictionary<Int,Int> = [1:13.3, 2:14.1, 3: 16.9] // no
 var dict4 = Dictionary(uniqueKeysWithValues: [(1,2), (3,4), (5,6)]) // OK, why???
 var dict5 = ["Alex": 1989, "John": 2002, "Harold": 1951] // OK
 var dict6: Dictionary = [1, 2, 3, 4] // no, Array
 
 */


/*

 Задание 2

 1) Какой тип будет иметь словарь, ключи элементов которого будут строковыми значениями (String), а значения элементов — символьными (Character)
 2) Покажите все известные вам способы создания словаря такого типа. Экспериментируйте, вполне вероятно мы с вами можем ответить на данный вопрос разными способами.
 
 */

//var testDic = [String: Character]()
//var testDic2 = ["FirstLetter": Character("A")]
//
//
//type(of: testDic)
//
//testDic["FirstLetter"] = "A"
//testDic


/*

 Задание 3

 Какое значение будет у переменной result?

 var myArray1: Array<UInt> = [1,2,3,4,5]
 var myDict1 = [1:2, 3:4, 5:6]
 var result = myArray1.count + Int(myArray1[3]) + myDict1.count
 
 
 //12
 
 */

/*

 Задание 4 (Классное задание - как создавать Множества (сеты) + Массивы (арреи)

 1) Создайте словарь типа Dictionary<Int, String> и наполните его тремя элементами
 2) Запишите в множество все ключи словаря
 3) Запишите в массив все значения словаря
 4) Создайте множество, состоящее из всех значений коллекций из пунктов 2 и 3
 Будьте очень внимательны при решении заданий
 
 
 
 */


//
////МОЕ РЕШЕНИЕ
//
//
////1
//
//var testDic = [Int: String]()
//
//testDic[1] = "First Line"
//testDic[2] = "Second Line"
//testDic[3] = "Third Line"
//
//testDic
//
//
//// все ключи
//
//testDic.keys
//
//// все значения
//
//testDic.values
//
//
////2
//
//
//var keysArray = Array(testDic.keys) // keys -> Array
//var keysSet = Set(keysArray) // keys -> Set !!!
//
//keysSet // change Int --> String
//
//var keySet2 = Set<String>()
//
//
//for i in keysSet {
//    keySet2.insert((String(i)))
//}
//
//keySet2
//
//
////3
//
//var elementsArray = Array(testDic.values) // element -> Array
//var elementsSet2 = Set(elementsArray)
//
//elementsSet2
//
//
////4
//
//var unionSet = keySet2.union(elementsSet2)
//
//
//print (unionSet)


//РЕШЕНИЕ АВТОРА

/*
 
// 1)
var taskDict: Dictionary<Int, String> = [100: "USA", 101: "CAN", 102: "MEX"]
// 2)
var taskSet = Set(taskDict.keys)
// 3)
var taskArr = Array(taskDict.values)
// 4)
// Данный шаг невозможно выполнить, т.к. массив и множество имеют элементы различных типов данных

*/


/*

 Задание 5

 1) Создайте словарь типа Dictionary<Int, Array<String>> и наполните его произвольными значениями
 2) Запишите в константу dictElCount количество элементов в словаре
 3) Создайте массив, состоящий из dictElCount одинаковых элементов, значений которых dictElCount. Какой тип данных будет у созданного массива?
 
 
 */
//
////1
//
//var testDic = [1: ["Test1_1", "Test1_2","Test1_3"], 2: ["Test2_1", "Test2_2","Test2_3"]]
//
//type(of: testDic)
//
////2
//
//var dictElCount = testDic.count
//
//
////3
//
//var testArr = Array(repeating: dictElCount, count: dictElCount)
//
//testArr


// СТРОКА - коллекция символов

//Задание 1
//
//1) Создайте переменную типа String со значением «Swift»
//2) Создайте константу типа Character с произвольным значением
//3) Создайте массив в соответсвии со следующими требованиями:
//— количество элементов должно соответствовать количеству символов
//— значения элементов должны быть такими же, как у константы из пункта 2
//— тип массива должен быть Array<String>
//4) Проиницилизируйте значение константы из пункта 2 в переменную из пункта 1


//var aaa: String = "Swift"
//
//var nrOfSymbols = aaa.count
//
//let bbb: Character = "A"
//
//var arr = [String](repeating: String(bbb), count: nrOfSymbols)
//
//type(of: arr)
//
//aaa = String (bbb)



//Задание 2 (Интересное задание. Отличный пример как вычленить  кусок строки"!!!
//
//1) Создайте константу со строковым значением "JonhWick"
//2) Получите индекс первого символа строки.
//Используя полученный индекс выведите на консоль первый символ строки из пункта 1
//3) Одним выражением получите индекс последнего символа строки из пункта 1
//Используя полученный индекс выведите на консоль последний символ строки из пункта 1
//4) Запишите в новую константу первые четыре символа из строки "БабаЯга"
//Какой тип данных будет у созданной константы




//let aaa = "JonhWick"
//
//let startIndex = aaa.startIndex
//print(aaa[startIndex])
//
//let endIndex = aaa.index(before:aaa.endIndex)
//print(aaa[endIndex])
//
//let tmp_str = "БабаЯга"
//let tmp_firstIndex = tmp_str.startIndex
//let tmp_fourthIndex = tmp_str.index(tmp_firstIndex, offsetBy: 3)
//let newStr = tmp_str[tmp_firstIndex...tmp_fourthIndex]
//type(of:newStr) // Substring.Type



//Задание 3
//
//Самостоятельно в сети Интернет найдите кодовые точки для Unicode-символов «шахматные фигуры», после чего создайте два множества типа Set<Character>, состоящие из данных символов.
//Первое множество должно содержать все фигуры черного цвета, а второе — белого.

//var black: Set<Character> = ["♚"]
//var white: Set<Character> = ["♕"]



